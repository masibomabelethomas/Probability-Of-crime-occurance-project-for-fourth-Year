# DATA VISUALIZATION BY GGPLOT
# setting a working directory
#import dataset
library(gridExtra)
library(ggplot2)
> setwd("D:/AAAAA  MASIBO/Packt.Learning.R.for.Data.Visualization/2890OS_Code")
Data <- read.table(file = "EPA_Data.CSV",
sep = ",",
header = TRUE,
colClasses = c("Date","factor",rep("numeric",5)),
na.strings = "NA")
str(Data)
#plotting a histogram
ggplot(data = Data, aes(x = NO2)) +
geom_histogram(binwidth = 1)+
theme_classic()+
facet_wrap(~State)+
geom_vline(xintercept = mean(California$NO2),
colours = "yellow",
linetype = "longdash")+
geom_text(aes(label="mean",angle=0,x=18,y=20),colours = "red")
(state <- Data$State)
# ggplot boxplot
ordered <- c("Maine","Iowa","Texas","California","Ohio","New York")
ggplot(data = Data, aes(x =State ,y = NO2))+geom_boxplot()+ scale_x_discrete(limits = ordered)
# barplot
Pollution_1stOct2013<- Data[Data$Date == "2013-10-01",]
str(Pollution_1stOct2013)
ggplot(data = Pollution_1stOct2013, aes(x = State , y = SO2)) + geom_bar(stat = "identity")
#order the columns
ordered <-Pollution_1stOct2013[order(Pollution_1stOct2013$SO2),]
ordered
ggplot(data =Pollution_1stOct2013,aes(x=State,y = SO2))+geom_bar(stat ="identity")+scale_x_discrete(limits= ordered$State)
# creating simple scatter plot
California <- Data[Data$State== "California", ]
plot1 <- ggplot(data = California,aes(x=NO2,y=CO,
colour =Temperature,size=CO))+
geom_point()+
scale_colour_gradient(low="blue",high="red")+
labs(title = "Scatter plot\n modified",
colour = "Temp.(0C)")+
xlab("NO2 (ppm)")+
ylab("CO (ppm)")+
geom_line(method = "lm",se= TRUE)
plot1
#have a list of colours or specify the high and low colours.
#time series plots
ggplot(data = California,aes(x=Date,y=NO2,colour=CO))+geom_line(size =1)
# dealing with uncertainities in data
setwd("D:/AAAAA  MASIBO/Packt.Learning.R.for.Data.Visualization/2890OS_Code/Data")
Weekly_Values <- read.table(file ="Weekly_Values.csv",sep = "," ,header = TRUE)
Weekly_Values
ordered_weekly_values <-Weekly_Values [order(Weekly_Values$SO2.mean),]
str(ordered_weekly_values)
plot2 <- ggplot(data= Weekly_Values,aes(x=State,y=SO2.mean))+
geom_bar(stat="identity",fill="grey")+
scale_x_discrete(limits=ordered_weekly_values$State)+
geom_errorbar(data = Weekly_Values,
aes(ymin=SO2.mean-(2*SO2.se),
ymax=SO2.mean+(2*SO2.se)),
width=0.1)
plot2
#using gridExtra package for multiple plots
grid.arrange(plot1,plot2, nrow=2)
#using gridExtra package for multiple plots
grid.arrange(plot1,plot2, nrow=2)
plot1
plot1 <- ggplot(data = California,aes(x=NO2,y=CO,
colour =Temperature,size=CO))+
geom_point()+
scale_colour_gradient(low="blue",high="red")+
labs(title = "Scatter plot\n modified",
colour = "Temp.(0C)")+
xlab("NO2 (ppm)")+
ylab("CO (ppm)")+
geom_line(method = "lm",se= TRUE)
# DATA VISUALIZATION BY GGPLOT
# setting a working directory
#import dataset
library(gridExtra)
library(ggplot2)
> setwd("D:/AAAAA  MASIBO/Packt.Learning.R.for.Data.Visualization/2890OS_Code")
Data <- read.table(file = "EPA_Data.CSV",
sep = ",",
header = TRUE,
colClasses = c("Date","factor",rep("numeric",5)),
na.strings = "NA")
str(Data)
#plotting a histogram
ggplot(data = Data, aes(x = NO2)) +
geom_histogram(binwidth = 1)+
theme_classic()+
facet_wrap(~State)+
geom_vline(xintercept = mean(California$NO2),
colours = "yellow",
linetype = "longdash")+
geom_text(aes(label="mean",angle=0,x=18,y=20),colours = "red")
(state <- Data$State)
# ggplot boxplot
ordered <- c("Maine","Iowa","Texas","California","Ohio","New York")
ggplot(data = Data, aes(x =State ,y = NO2))+geom_boxplot()+ scale_x_discrete(limits = ordered)
# barplot
Pollution_1stOct2013<- Data[Data$Date == "2013-10-01",]
str(Pollution_1stOct2013)
ggplot(data = Pollution_1stOct2013, aes(x = State , y = SO2)) + geom_bar(stat = "identity")
#order the columns
ordered <-Pollution_1stOct2013[order(Pollution_1stOct2013$SO2),]
ordered
ggplot(data =Pollution_1stOct2013,aes(x=State,
y = SO2))+geom_bar(stat ="identity")+scale_x_discrete(limits= ordered$State)
# creating simple scatter plot
California <- Data[Data$State== "California", ]
plot1 <- ggplot(data = California,aes(x=NO2,y=CO,
colour =Temperature,size=CO))+
geom_point()+
scale_colour_gradient(low="blue",high="red")+
labs(title = "Scatter plot\n modified",
colour = "Temp.(0C)")+
xlab("NO2 (ppm)")+
ylab("CO (ppm)")+
geom_line(method = "lm",se= TRUE)
plot1
ggplot(data =Pollution_1stOct2013,
aes(x=State,
y = SO2))+geom_bar(stat ="identity")+scale_x_discrete(limits= ordered$State)
ggplot(data =Pollution_1stOct2013,
aes(x=State,
y = SO2))+geom_bar(stat ="identity")+scale_x_discrete(limits= ordered$State)
ggplot(data = Pollution_1stOct2013, aes(x = State , y = SO2)) + geom_bar(stat = "identity")
ggplot(data = Data, aes(x =State ,y = NO2))+geom_boxplot()+ scale_x_discrete(limits = ordered)
plot1 <- ggplot(data = California,aes(x=NO2,y=CO,
colour =Temperature,size=CO))+
geom_point()+
scale_colour_gradient(low="blue",high="red")+
labs(title = "Scatter plot\n modified",
colour = "Temp.(0C)")+
xlab("NO2 (ppm)")+
ylab("CO (ppm)")+
geom_line(method = "lm",se= TRUE)
plot1 <- ggplot(data = California,aes(x=NO2,y=CO,
colour =Temperature,size=CO))+
geom_point()+
scale_colour_gradient(low="blue",high="red")+
labs(title = "Scatter plot\n modified",
colour = "Temp.(0C)")+
xlab("NO2 (ppm)")+
ylab("CO (ppm)")+
geom_line(method = "lm",se = TRUE)
ggplot(data =Pollution_1stOct2013,
aes(x=State,
y = SO2))+geom_bar(stat ="identity")+scale_x_discrete(limits= ordered$State)
plot1
str(ordered_weekly_values)
str(ordered_weekly_values)
plot2 <- ggplot(data= Weekly_Values,aes(x=State,y=SO2.mean))+
geom_bar(stat="identity",fill="grey")+
scale_x_discrete(limits=ordered_weekly_values$State)+
geom_errorbar(data = Weekly_Values,
aes(ymin=SO2.mean-(2*SO2.se),
ymax=SO2.mean+(2*SO2.se)),
width=0.1)
plot2 <- ggplot(data= Weekly_Values,aes(x=State,y=SO2.mean))+
geom_bar(stat="identity",fill="grey")+
scale_x_discrete(limits=ordered_weekly_values$State)+
geom_errorbar(data = Weekly_Values,
aes(ymin=SO2.mean-(2*SO2.se),
ymax=SO2.mean+(2*SO2.se)),
width=0.1)
#using gridExtra package for multiple plots
grid.arrange(plot1,plot2, nrow=2)
summary(model)
#loading packages
library(readxl)
library(lubridate)
library(dplyr)
library(ISLR)
library(corrplot)
library(caret)
library(nnet)
library(fmsb)
library(lattice)
library(ggplot2)
#setting working directory
setwd("D:/DATA/PROJECT")
#importing data
Data <- read.csv("D:/DATA/PROJECT/P-Data11.csv",header = T, stringsAsFactors = F)
Data1 <-select(Data,Crime.Category,Gender,Age.Group,Distance.Category,Time2,Month)
attach(Data1)
##Forming dummy variables
Data1$Crime <- as.factor(Data1$Crime)
Data1$Crime <- factor(Data1$Crime, ordered = F)
#Distance.Category
Data1$Distance.Category <- as.factor(Data1$Distance.Category)
#Gender
Data1$Gender <- as.factor(Data1$Gender)
Gender.Female <- ifelse(Gender == "Female",1,0)
for (Crime in 1:nrow(Data1)){
if(Data1$Crime.Category[Crime] == "NON-VIOLENT CRIMES"){
Data1$Crime.Category[Crime] <- 0
}
else{
Data1$Crime.Category[Crime] <- 1
}
}
Data1$Crime.Category <- as.numeric(Data1$Crime.Category)
#Month
Data1$Month <- as.factor(Data1$Month)
Month.Midmonth <- ifelse(Month == "Mid Month",1,0)
Month.EndMonth <- ifelse(Month == "End Month",1,0)
#Time
Data1$Time2 <- as.factor(Data1$Time2)
Time2.EarlyMorning <- ifelse(Time2 == "Early Morning",1,0)
Time2.LateyMorning <- ifelse(Time2 == "Late Morning",1,0)
Time2.Afternoon <- ifelse(Time2 == "Afternoon",1,0)
Time2.EarlyNight <- ifelse(Time2 == "Early Night",1,0)
Time2.Night <- ifelse(Time2 == "Night",1,0)
Time2.LateNight <- ifelse(Time2 == "Late Night",1,0)
#fitting the model
model <- glm(Crime.Category ~ Time2 + Gender + Age.Group + Distance.Category,
data = Data1, family = binomial(link = "probit"))
summary(model)
install.packages("lattice")
install.packages("lattice")
library(lattice)
#loading packages
library(readxl)
library(lubridate)
library(dplyr)
library(ISLR)
library(corrplot)
library(caret)
library(nnet)
library(fmsb)
library(lattice)
library(ggplot2)
library(lattice)
#setting working directory
setwd("D:/DATA/PROJECT")
#importing data
Data <- read.csv("D:/DATA/PROJECT/P-Data11.csv",header = T, stringsAsFactors = F)
Data1 <-select(Data,Crime.Category,Gender,Age.Group,Distance.Category,Time2,Month)
attach(Data1)
##Forming dummy variables
Data1$Crime <- as.factor(Data1$Crime)
Data1$Crime <- factor(Data1$Crime, ordered = F)
#Distance.Category
Data1$Distance.Category <- as.factor(Data1$Distance.Category)
#Gender
Data1$Gender <- as.factor(Data1$Gender)
Gender.Female <- ifelse(Gender == "Female",1,0)
for (Crime in 1:nrow(Data1)){
if(Data1$Crime.Category[Crime] == "NON-VIOLENT CRIMES"){
Data1$Crime.Category[Crime] <- 0
}
else{
Data1$Crime.Category[Crime] <- 1
}
}
Data1$Crime.Category <- as.numeric(Data1$Crime.Category)
#Month
Data1$Month <- as.factor(Data1$Month)
Month.Midmonth <- ifelse(Month == "Mid Month",1,0)
Month.EndMonth <- ifelse(Month == "End Month",1,0)
#Time
Data1$Time2 <- as.factor(Data1$Time2)
Time2.EarlyMorning <- ifelse(Time2 == "Early Morning",1,0)
Time2.LateyMorning <- ifelse(Time2 == "Late Morning",1,0)
Time2.Afternoon <- ifelse(Time2 == "Afternoon",1,0)
Time2.EarlyNight <- ifelse(Time2 == "Early Night",1,0)
Time2.Night <- ifelse(Time2 == "Night",1,0)
Time2.LateNight <- ifelse(Time2 == "Late Night",1,0)
#fitting the model
model <- glm(Crime.Category ~ Time2 + Gender + Age.Group + Distance.Category,
data = Data1, family = binomial(link = "probit"))
summary(model)
#fitting the model
model <- glm(Crime.Category ~ Time2 + Gender + Age.Group + Distance.Category,
data = Data1, family = binomial(link = "probit"))
summary(model)
